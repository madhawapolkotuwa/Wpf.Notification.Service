<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:beh="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:enums="clr-namespace:MpCoding.WPF.Notification.Enums"
    xmlns:ncmd="clr-namespace:MpCoding.WPF.Notification.Commands"
    xmlns:nctrl="clr-namespace:MpCoding.WPF.Notification.Controls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MpCoding.WPF.Notification;component/Dictionaries/Converters.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MpCoding.WPF.Notification;component/Dictionaries/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Boolean x:Key="False">False</sys:Boolean>
    <sys:Boolean x:Key="True">True</sys:Boolean>

    <Style x:Key="internal_notify_flexi_button_base" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="internal_notify_flexi_button"
        BasedOn="{StaticResource internal_notify_flexi_button_base}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFF1F1F1" />
        <Setter Property="Width" Value="90" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="borderButton"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="1"
                                    ShadowDepth="0"
                                    Color="Gray" />
                            </Border.Effect>
                        </Border>
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <Border.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=borderButton}" />
                            </Border.OpacityMask>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderButton" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="4"
                                        ShadowDepth="0"
                                        Color="#bfa8a8" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="internal_Ok_button">
        <Button
            Margin="4,1"
            BorderBrush="Black"
            Command="{x:Static ncmd:NotificationCommands.OkayResult}"
            CommandParameter="True"
            Style="{StaticResource internal_notify_flexi_button}">
            <StackPanel Orientation="Horizontal">
                <Image
                    Width="28"
                    Height="28"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Source="{StaticResource accept}" />
                <TextBlock VerticalAlignment="Center" Text="{Binding}" />
            </StackPanel>
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="internal_Cancel_button">
        <Button
            Margin="4,1"
            BorderBrush="Black"
            Command="{x:Static ncmd:NotificationCommands.CancelResult}"
            CommandParameter="False"
            Style="{StaticResource internal_notify_flexi_button}">
            <StackPanel Orientation="Horizontal">
                <Image
                    Width="28"
                    Height="28"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Source="{StaticResource cancel}" />
                <TextBlock VerticalAlignment="Center" Text="{Binding}" />
            </StackPanel>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="internal_notification_controlbox">
        <StackPanel
            Margin="0,2"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <ContentControl Content="Cancel" ContentTemplate="{StaticResource internal_Cancel_button}" />
            <ContentControl Content="Accept" ContentTemplate="{StaticResource internal_Ok_button}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="internal_notification_userinput_controlbox">
        <StackPanel
            Margin="0,2"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <ContentControl Content="Cancel" ContentTemplate="{StaticResource internal_Cancel_button}" />
            <ContentControl Content="Ok" ContentTemplate="{StaticResource internal_Ok_button}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="internal_notify_header_template">
        <Border Grid.Row="0" Background="Transparent">
            <Border>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="8,8,0,0" />
                        <Setter Property="Background" Value="Gray" />
                        <Style.Triggers>
                            <!--  Success  -->
                            <DataTrigger Binding="{Binding NotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:NotificationIcon.Success}">
                                <Setter Property="Background" Value="#39be73" />
                            </DataTrigger>
                            <!--  Info  -->
                            <DataTrigger Binding="{Binding NotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:NotificationIcon.Info}">
                                <Setter Property="Background" Value="#0075ff" />
                            </DataTrigger>
                            <!--  Warning  -->
                            <DataTrigger Binding="{Binding NotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:NotificationIcon.Warning}">
                                <Setter Property="Background" Value="#ffd54f" />
                            </DataTrigger>
                            <!--  Error  -->
                            <DataTrigger Binding="{Binding NotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:NotificationIcon.Error}">
                                <Setter Property="Background" Value="#e04f5f" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid x:Name="grdHeader">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="35" />
                    </Grid.ColumnDefinitions>
                    <!--  Title  -->
                    <Grid
                        x:Name="PART_header"
                        Grid.Column="0"
                        Background="Transparent"
                        IsHitTestVisible="True">
                        <beh:Interaction.Triggers>
                            <beh:EventTrigger EventName="MouseLeftButtonDown">
                                <beh:InvokeCommandAction Command="{x:Static ncmd:NotificationCommands.DragMove}" />
                            </beh:EventTrigger>
                        </beh:Interaction.Triggers>
                        <TextBlock
                            Margin="10,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontFamily="Century Gothic"
                            FontSize="15"
                            FontWeight="Bold"
                            Foreground="{Binding AccentForeground, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}"
                            Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" />
                    </Grid>
                    <!--  Close button X  -->
                    <Button
                        Grid.Column="1"
                        Width="{Binding ElementName=grdHeader, Path=ActualHeight}"
                        Command="{x:Static ncmd:NotificationCommands.CancelResult}"
                        CommandParameter="{StaticResource False}"
                        Content="X"
                        FontSize="15"
                        FontStretch="ExtraExpanded"
                        FontWeight="Bold"
                        Foreground="{Binding AccentForeground, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}"
                        Style="{StaticResource internal_notify_flexi_button_base}" />
                </Grid>
            </Border>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="internal_notification_content">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Image
                Width="60"
                Height="60"
                Margin="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="{Binding ShowNotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}, Converter={StaticResource BooleanToVisible}}">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="{StaticResource notify_info}" />
                        <Style.Triggers>
                            <!--  Success  -->
                            <DataTrigger Binding="{Binding NotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:NotificationIcon.Success}">
                                <Setter Property="Source" Value="{StaticResource notify_success}" />
                            </DataTrigger>
                            <!--  Warning  -->
                            <DataTrigger Binding="{Binding NotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:NotificationIcon.Warning}">
                                <Setter Property="Source" Value="{StaticResource notify_warning}" />
                            </DataTrigger>
                            <!--  Error  -->
                            <DataTrigger Binding="{Binding NotificationIcon, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:NotificationIcon.Error}">
                                <Setter Property="Source" Value="{StaticResource notify_error}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <TextBlock
                Grid.Column="1"
                MaxWidth="800"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding Message, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}"
                TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <!--  Success  -->
                            <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:DisplayType.ToastInfo}">
                                <Setter Property="Foreground" Value="{Binding ToastForeground, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="internal_notification_showInfo">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="35" />
            </Grid.RowDefinitions>
            <ContentControl ContentTemplate="{StaticResource internal_notification_content}" />
            <ContentControl
                Grid.Row="1"
                Content="Confirm"
                ContentTemplate="{StaticResource internal_Ok_button}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="internal_notification_confirm">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="35" />
            </Grid.RowDefinitions>
            <ContentControl ContentTemplate="{StaticResource internal_notification_content}" />
            <ContentControl Grid.Row="1" ContentTemplate="{StaticResource internal_notification_controlbox}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="internal_notification_getInfo">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="40" />
                <RowDefinition Height="35" />
            </Grid.RowDefinitions>
            <ContentControl ContentTemplate="{StaticResource internal_notification_content}" />
            <Separator Grid.Row="1" />
            <Grid Grid.Row="2" Margin="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock FontSize="12" Text="Enter : " />
                <TextBox
                    Grid.Column="2"
                    Width="300"
                    Text="{Binding UserInput, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}"
                    TextWrapping="WrapWithOverflow" />
            </Grid>
            <ContentControl Grid.Row="3" ContentTemplate="{StaticResource internal_notification_userinput_controlbox}" />
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="internal_notification_dialog" TargetType="{x:Type nctrl:NotificationControl}">
        <Border
            x:Name="brdrMain"
            Height="Auto"
            Margin="10"
            Background="#FF7E7777"
            BorderBrush="#FFEEEEEE"
            CornerRadius="10">
            <Border.Effect>
                <DropShadowEffect
                    BlurRadius="10"
                    ShadowDepth="0"
                    Color="Gray" />
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="27" />
                    <RowDefinition Height="Auto" MinHeight="100" />
                </Grid.RowDefinitions>
                <!--  HEADER  -->
                <ContentControl Grid.Row="0" ContentTemplate="{StaticResource internal_notify_header_template}" />
                <!--  ACTUAL CONTENT  -->
                <Border
                    Grid.Row="1"
                    Background="{TemplateBinding Background}"
                    CornerRadius="0,0,9,9">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="100" />
                            <RowDefinition Height="8" />
                        </Grid.RowDefinitions>
                        <ContentControl Margin="5">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Triggers>
                                        <!--  SHOW INFO  -->
                                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:DisplayType.ShowInfo}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource internal_notification_showInfo}" />
                                        </DataTrigger>
                                        <!--  GET CONFIRMATION  -->
                                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:DisplayType.GetConfirmation}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource internal_notification_confirm}" />
                                        </DataTrigger>
                                        <!--  GET INPUT  -->
                                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type nctrl:NotificationControl}}}" Value="{x:Static enums:DisplayType.GetInput}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource internal_notification_getInfo}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="internal_notification_toast" TargetType="{x:Type nctrl:NotificationControl}">
        <Border
            x:Name="brdrMain"
            Height="Auto"
            MaxWidth="400"
            MaxHeight="300"
            Margin="5">
            <Border.Effect>
                <DropShadowEffect
                    BlurRadius="5"
                    ShadowDepth="0"
                    Color="White" />
            </Border.Effect>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{Binding Path=ToastBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <!--  TOAST DIALOG  -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="rowdefmain" Height="25" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="100" />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>
                <!--  TOAST HEADER  -->
                <Grid Background="{TemplateBinding ToastAccentColor}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>
                    <!--  APP NAME  -->
                    <TextBlock
                        Margin="15,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontSize="14"
                        Foreground="{TemplateBinding AccentForeground}"
                        Text="{TemplateBinding AppName}" />
                    <!--  CLOSE BUTTON  -->
                    <Button
                        Grid.Column="1"
                        Width="25"
                        BorderThickness="0"
                        Command="{x:Static ncmd:NotificationCommands.CancelResult}"
                        CommandParameter="{StaticResource False}"
                        Content="X"
                        FontSize="15"
                        FontStretch="ExtraExpanded"
                        FontWeight="Bold"
                        Foreground="{TemplateBinding AccentForeground}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Red" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border
                                    Width="20"
                                    Height="20"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="5">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
                <!--  MESSAGE TITLE  -->
                <TextBlock
                    Grid.Row="1"
                    Margin="5"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="{TemplateBinding ToastForeground}"
                    Text="{TemplateBinding Title}" />
                <!--  ACTUAL CONTENT  -->
                <ContentControl
                    Grid.Row="2"
                    Margin="5"
                    VerticalAlignment="Top"
                    ContentTemplate="{StaticResource internal_notification_content}" />
                <!--  AUTO CLOSE  -->
                <WrapPanel
                    Grid.Row="3"
                    Margin="3"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Visibility="{TemplateBinding AutoClose,
                                                 Converter={StaticResource BooleanToVisible}}">
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="FontSize" Value="10" />
                            <Setter Property="Foreground" Value="{Binding Path=ToastForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Style>
                    </WrapPanel.Resources>
                    <TextBlock Text="Auto close in " />
                    <TextBlock FontWeight="Bold" Text="{Binding Path=CountDown, RelativeSource={RelativeSource TemplatedParent}}" />
                    <TextBlock Text="sec." />
                </WrapPanel>
                <!--  CLOSE ALL TOASTS  -->
                <TextBlock
                    Grid.Row="3"
                    Margin="3"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
                    <Hyperlink
                        Command="{x:Static ncmd:NotificationCommands.CloseAllToasts}"
                        CommandParameter="{StaticResource False}"
                        FontSize="9"
                        Foreground="{TemplateBinding ToastForeground}"
                        TextDecorations="Underline">
                        Close All
                    </Hyperlink>
                </TextBlock>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type nctrl:NotificationControl}">
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Background" Value="#FFEEEEEE" />
        <Setter Property="BorderBrush" Value="#FF7E7777" />
        <Setter Property="ShowActivated" Value="False" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="MinWidth" Value="350" />
        <Setter Property="Template" Value="{StaticResource internal_notification_dialog}" />
        <Style.Triggers>
            <Trigger Property="Type" Value="ToastInfo">
                <Setter Property="Template" Value="{StaticResource internal_notification_toast}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>